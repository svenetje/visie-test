Quick Details
Opdracht ID : 74
Opdracht titel : XML DATA (File) Processing
Opdracht Programmeertalen en/of tech : PHP
Opdracht (geschatte) moeilijkheidsgraad : Gemiddeld
Opdracht Eisen : Object Oriented
Opdracht Extra Omschrijving : 
Uitbreiding, uitleg, aanvulling en toelichting op elk van de onderwerpen in deze opdrachttekst (schrijf alleen tekst die nog niet voorkomt):

Opdracht: XML Data (Bestand) Verwerking
=====================================

Doel:
-----

Het doel van deze opdracht is het verwerken van XML-bestanden met behulp van objectgeoriënteerd programmeren in PHP
XML (eXtensible Markup Language) is een opmaaktaal die wordt gebruikt om gestructureerde gegevens uit te wisselen tussen verschillende applicaties en systemen
Door een PHP-klasse te maken voor het verwerken van XML-bestanden, kunt u eenvoudig XML-gegevens lezen, wijzigen en opslaan in uw PHP-projecten.

Benodigdheden:
-------------

1
Een teksteditor (zoals Visual Studio Code, Sublime Text of Notepad++): Dit is nodig om PHP-code te schrijven en te bewerken
Zorg ervoor dat uw teksteditor syntax highlighting en eventueel autocompletion ondersteunt voor PHP om het programmeren gemakkelijker te maken.

2
Een lokale webserver met PHP-ondersteuning (zoals XAMPP, WampServer of MAMP): Om uw PHP-code uit te voeren, heeft u een webserver nodig die PHP ondersteunt
Dit stelt u in staat om uw PHP-bestanden in een browser te openen en de resultaten van uw code te bekijken.

Opdrachtbeschrijving:
--------------------

1
Maak een PHP-klasse genaamd `XMLProcessor`: Deze klasse zal fungeren als een wrapper rond PHP's ingebouwde DOMDocument-klasse, waarmee u XML-bestanden kunt lezen, bewerken en opslaan met behulp van objectgeoriënteerd programmeren.

2
Implementeer de volgende methoden in de `XMLProcessor`-klasse: Deze methoden zullen de basisfunctionaliteit van de klasse vormen en zullen worden gebruikt om XML-elementen te manipuleren en bestanden te lezen en te schrijven.

3
Creëer een XML-bestand met de volgende structuur: Dit bestand zal dienen als voorbeeld voor het testen van uw `XMLProcessor`-klasse
Het bevat een `root`-element met twee `item`-elementen, elk met een `name`- en een `price`-element.

4
Gebruik de `XMLProcessor`-klasse om het XML-bestand te laden, elementen toe te voegen, te verwijderen of te bewerken, en het resultaat op te slaan in een nieuw XML-bestand: Dit zal u in staat stellen om te zien of uw klasse correct werkt en u in staat stelt om XML-bestanden te verwerken zoals verwacht.

5
Test uw oplossing grondig om er zeker van te zijn dat alle methoden correct werken: Probeer verschillende testcases uit om te controleren of uw code correct werkt en geen fouten bevat
Houd rekening met zowel basis- als randgevallen.

Bronnen:
--------

1
PHP Documentatie
DOMDocument: [https://www.php.net/manual/en/class.domdocument.php](https://www.php.net/manual/en/class.domdocument.php)
Dit is de officiële documentatie voor de DOMDocument-klasse
Hier vindt u meer informatie over de beschikbare methoden en eigenschappen, evenals voorbeeldcode en uitleg.

2
PHP Documentatie
DOMElement: [https://www.php.net/manual/en/class.domelement.php](https://www.php.net/manual/en/class.domelement.php)
Dit is de officiële documentatie voor de DOMElement-klasse, die wordt gebruikt om individuele elementen in een DOMDocument-object te vertegenwoordigen
U zult deze klasse gebruiken bij het implementeren van verschillende methoden in uw `XMLProcessor`-klasse.
