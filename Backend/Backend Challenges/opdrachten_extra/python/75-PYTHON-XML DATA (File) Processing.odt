Quick Details
Opdracht ID : 75
Opdracht titel : XML DATA (File) Processing
Opdracht Programmeertalen en/of tech : PYTHON
Opdracht (geschatte) moeilijkheidsgraad : Gemiddeld
Opdracht Eisen : Object Oriented
Opdracht Extra Omschrijving : 
Opdracht: XML Data (Bestand) Verwerking
Taal: Python
Moeilijkheidsgraad: Gemiddeld
Object Georiënteerd

Doel:
Het doel van deze opdracht is om ervaring op te doen met het verwerken van XML-bestanden in Python met behulp van objectgeoriënteerd programmeren
XML is een gestructureerde dataopmaak die veel wordt gebruikt voor gegevensuitwisseling tussen applicaties en systemen.

Benodigdheden:
1
Python geïnstalleerd op uw computer (https://www.python.org/downloads/)

2
De xml-bibliotheek (xml.etree.ElementTree) voor Python (standaard geïnstalleerd met Python)
Deze bibliotheek biedt een eenvoudige en efficiënte API voor het parsen en genereren van XML-gegevens.

Opdrachtomschrijving:
1
Maak een nieuw Python-bestand met de naam "xml_data_processing.py"
Dit bestand zal de belangrijkste code bevatten voor het verwerken van XML-bestanden met behulp van de XMLDataProcessor-klasse.

2
Creëer een nieuwe klasse met de naam "XMLDataProcessor" in het bestand
Deze klasse is verantwoordelijk voor het verwerken van XML-bestanden en het extraheren van informatie uit deze bestanden met behulp van verschillende methoden.

3
Voeg een methode genaamd "load_xml_file" toe aan de klasse
Deze methode moet een bestandsnaam als argument accepteren en het XML-bestand laden met behulp van de xml.etree.ElementTree-bibliotheek
Dit zal het XML-bestand in een boomstructuur laden, waardoor het gemakkelijker wordt om het te doorlopen en informatie uit te extraheren.

4
Voeg een methode genaamd "get_elements" toe aan de klasse
Deze methode moet een tag-naam als argument accepteren en alle XML-elementen met die tag-naam retourneren
Dit kan nuttig zijn om specifieke gegevens uit het XML-bestand te extraheren op basis van de tag-naam.

5
Voeg een methode genaamd "get_element_attributes" toe aan de klasse
Deze methode moet een enkel XML-element als argument accepteren en alle attributen van dat element retourneren
Attributen zijn extra gegevens die aan een XML-element kunnen worden toegevoegd en vaak belangrijke informatie bevatten.

6
Schrijf een main-functie die een instantie van de XMLDataProcessor-klasse maakt, een XML-bestand laadt en alle elementen en hun attributen afdrukt voor een opgegeven tag-naam
Dit zal u helpen om de correcte werking van uw code te valideren en om ervoor te zorgen dat u de gewenste gegevens uit het XML-bestand kunt extraheren.

7
Test uw code met verschillende XML-bestanden en tag-namen
Het is belangrijk om uw code te testen met verschillende invoerbestanden en scenario's om ervoor te zorgen dat het correct werkt en bestand is tegen fouten en onverwachte situaties.

Inleveren:
- Het Python-bestand "xml_data_processing.py" met de voltooide klassen en functies.

Aanvullende bronnen:
- Documentatie over de xml.etree.ElementTree-bibliotheek: https://docs.python.org/3/library/xml.etree.elementtree.html
- Voorbeeld van het werken met XML in Python: https://www.geeksforgeeks.org/xml-parsing-python/
