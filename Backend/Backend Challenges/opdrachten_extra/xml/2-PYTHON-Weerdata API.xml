<Assignment xmlns="http://schemas.datacontract.org/2004/07/Syn_OpenAI_AppLib.Data" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><AssignmentText>Opdracht: Weerdata API uitbreiding

Titel: Weerdata API

Vereisten:
1. Weerdata ophalen van een online bron (bijv. OpenWeatherMap API)
2. Verwerken van de opgehaalde data
3. Weergeven van de data in grafieken (bijv. met behulp van numpy en matplotlib)
4. Toevoegen van extra weerparameters zoals windsnelheid en luchtdruk
5. Grafieken voor extra weerparameters genereren en weergeven
6. Foutafhandeling toevoegen bij het ophalen van de API-data

Programmeertaal: Python

Moeilijkheidsgraad: Gemiddeld

Instructies:

1. Volg de instructies van de oorspronkelijke opdracht om een account aan te maken bij OpenWeatherMap, de benodigde bibliotheken te installeren en het Python-script te schrijven.

2. Voeg extra weerparameters toe aan het script, zoals windsnelheid en luchtdruk:
   ```python
   wind_speed = weather_data['wind']['speed']
   pressure = weather_data['main']['pressure']
   ```

3. Pas de functie 'plot_graphs' aan om de extra weerparameters in de grafieken op te nemen:
   ```python
   def plot_graphs(temperature, humidity, wind_speed, pressure):
       x = np.array(['Temperatuur', 'Luchtvochtigheid', 'Windsnelheid', 'Luchtdruk'])
       y = np.array([temperature, humidity, wind_speed, pressure])
       plt.bar(x, y)
       plt.title("Weerdata")
       plt.xlabel("Weerparameters")
       plt.ylabel("Waarden")
       plt.show()
   ```

4. Roep de aangepaste 'plot_graphs' functie aan met de extra weerparameters:
   ```python
   plot_graphs(temperature, humidity, wind_speed, pressure)
   ```

5. Voeg foutafhandeling toe bij het ophalen van de API-data. Controleer of er een fout is opgetreden bij het ophalen van de gegevens en geef een foutmelding weer indien nodig:
   ```python
   def get_weather_data(api_key, base_url, city_name, units):
       complete_url = f"{base_url}appid={api_key}&amp;q={city_name}&amp;units={units}"
       response = requests.get(complete_url)
       data = response.json()
       if data["cod"] != "404":
           return data
       else:
           print("Stad niet gevonden. Controleer de stadnaam en probeer opnieuw.")
           return None
   ```

6. Controleer of de weerdata correct is opgehaald voordat je de grafieken genereert en weergeeft:
   ```python
   weather_data = get_weather_data(api_key, base_url, city_name, units)
   if weather_data is not None:
       temperature = weather_data['main']['temp']
       humidity = weather_data['main']['humidity']
       wind_speed = weather_data['wind']['speed']
       pressure = weather_data['main']['pressure']
       plot_graphs(temperature, humidity, wind_speed, pressure)
   ```

7. Voer het uitgebreide Python-script uit en controleer de grafieken met de extra weerparameters en foutafhandeling.</AssignmentText><Config><Difficulty>Gemiddeld</Difficulty><ExtraDescription/><ID>2</ID><Language>PYTHON</Language><Reqs>Weerdata moet worden opgehaald, verwerkt en in grafieken worden weergegeven (numpy bijv)</Reqs><Title>Weerdata API</Title></Config><ID>2</ID><RawResponseObj z:Id="i1" xmlns:a="http://schemas.datacontract.org/2004/07/Syn_OpenAI_CoreLib.Core.Models.Data" xmlns:z="http://schemas.microsoft.com/2003/10/Serialization/"><created xmlns="http://schemas.datacontract.org/2004/07/Syn_OpenAI_CoreLib.Data">1682884365</created><id xmlns="http://schemas.datacontract.org/2004/07/Syn_OpenAI_CoreLib.Data">chatcmpl-7B7O9QrMnFI1wwkobe0X2Kd0T8gnr</id><a:choices><a:API_AIResponse_ChoicesJSON><a:finish_reason>stop</a:finish_reason><a:index>0</a:index><a:message><a:content>Opdracht: Weerdata API uitbreiding

Titel: Weerdata API

Vereisten:
1. Weerdata ophalen van een online bron (bijv. OpenWeatherMap API)
2. Verwerken van de opgehaalde data
3. Weergeven van de data in grafieken (bijv. met behulp van numpy en matplotlib)
4. Toevoegen van extra weerparameters zoals windsnelheid en luchtdruk
5. Grafieken voor extra weerparameters genereren en weergeven
6. Foutafhandeling toevoegen bij het ophalen van de API-data

Programmeertaal: Python

Moeilijkheidsgraad: Gemiddeld

Instructies:

1. Volg de instructies van de oorspronkelijke opdracht om een account aan te maken bij OpenWeatherMap, de benodigde bibliotheken te installeren en het Python-script te schrijven.

2. Voeg extra weerparameters toe aan het script, zoals windsnelheid en luchtdruk:
   ```python
   wind_speed = weather_data['wind']['speed']
   pressure = weather_data['main']['pressure']
   ```

3. Pas de functie 'plot_graphs' aan om de extra weerparameters in de grafieken op te nemen:
   ```python
   def plot_graphs(temperature, humidity, wind_speed, pressure):
       x = np.array(['Temperatuur', 'Luchtvochtigheid', 'Windsnelheid', 'Luchtdruk'])
       y = np.array([temperature, humidity, wind_speed, pressure])
       plt.bar(x, y)
       plt.title("Weerdata")
       plt.xlabel("Weerparameters")
       plt.ylabel("Waarden")
       plt.show()
   ```

4. Roep de aangepaste 'plot_graphs' functie aan met de extra weerparameters:
   ```python
   plot_graphs(temperature, humidity, wind_speed, pressure)
   ```

5. Voeg foutafhandeling toe bij het ophalen van de API-data. Controleer of er een fout is opgetreden bij het ophalen van de gegevens en geef een foutmelding weer indien nodig:
   ```python
   def get_weather_data(api_key, base_url, city_name, units):
       complete_url = f"{base_url}appid={api_key}&amp;q={city_name}&amp;units={units}"
       response = requests.get(complete_url)
       data = response.json()
       if data["cod"] != "404":
           return data
       else:
           print("Stad niet gevonden. Controleer de stadnaam en probeer opnieuw.")
           return None
   ```

6. Controleer of de weerdata correct is opgehaald voordat je de grafieken genereert en weergeeft:
   ```python
   weather_data = get_weather_data(api_key, base_url, city_name, units)
   if weather_data is not None:
       temperature = weather_data['main']['temp']
       humidity = weather_data['main']['humidity']
       wind_speed = weather_data['wind']['speed']
       pressure = weather_data['main']['pressure']
       plot_graphs(temperature, humidity, wind_speed, pressure)
   ```

7. Voer het uitgebreide Python-script uit en controleer de grafieken met de extra weerparameters en foutafhandeling.</a:content><a:role>assistant</a:role></a:message></a:API_AIResponse_ChoicesJSON></a:choices><a:model>gpt-4-0314</a:model><a:object>chat.completion</a:object><a:usage><a:completion_tokens>740</a:completion_tokens><a:prompt_tokens>861</a:prompt_tokens><a:total_tokens>1601</a:total_tokens></a:usage></RawResponseObj></Assignment>