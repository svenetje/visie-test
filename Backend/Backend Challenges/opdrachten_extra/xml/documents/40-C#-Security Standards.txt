Quick Details
Opdracht ID : 40
Opdracht titel : Security Standards
Opdracht Programmeertalen en/of tech : C#
Opdracht (geschatte) moeilijkheidsgraad : Moeilijk
Opdracht Eisen : Memory, sockets, connecties, data bestanden en encrypties
Opdracht Extra Omschrijving : 
Opdracht: Security Standards

Doel: Het ontwikkelen van een C# applicatie die aantoont hoe u geheugen, sockets, connecties, databestanden en encryptie op een veilige manier kunt beheren en beveiligen.

Moeilijkheidsgraad: Moeilijk

Benodigde voorkennis:
- Basis C# programmering
- Kennis van sockets en netwerkconnecties
- Kennis van bestandsbeheer en databestanden
- Begrip van basis cryptografie en encryptie concepten
- Inzicht in beveiligingsstandaarden en best practices

Opdrachtomschrijving:

1
Maak een C# applicatie die gebruikmaakt van sockets om verbinding te maken met een server
Zorg ervoor dat de verbinding versleuteld is met behulp van bijvoorbeeld SSL/TLS om de gegevensuitwisseling te beveiligen.
   Bron: https://docs.microsoft.com/en-us/dotnet/api/system.net.security.sslstream?view=net-6.0

2
Implementeer een authenticatiesysteem om de identiteit van de gebruiker te verifiëren en ongeautoriseerde toegang te voorkomen
Dit kan bijvoorbeeld door middel van een wachtwoord of een token
Sla de wachtwoorden op met behulp van een sterke hashing-techniek, zoals bcrypt.
   Bron: https://docs.microsoft.com/en-us/aspnet/core/security/authentication/add-user-data?view=aspnetcore-6.0&tabs=visual-studio

3
Beheer het geheugen op een veilige manier, zodat gevoelige gegevens zoals wachtwoorden en sleutels niet zichtbaar zijn voor aanvallers
Wis deze gegevens zodra ze niet meer nodig zijn en gebruik indien nodig beveiligde geheugenstructuren.
   Bron: https://docs.microsoft.com/en-us/dotnet/standard/security/writing-data-safe-code

4
Ontwerp een systeem om databestanden veilig op te slaan
Versleutel de gegevens met behulp van symmetrische cryptografie, zoals AES
Sla de sleutel voor de versleuteling veilig op, bijvoorbeeld met behulp van een sleutelbeheersysteem of een hardware security module (HSM).
   Bron: https://docs.microsoft.com/en-us/dotnet/standard/security/writing-secure-data

5
Beveilig de applicatie en de bijbehorende bestanden tegen ongeautoriseerde toegang en manipulatie
Dit kan onder andere door het gebruik van bestandspermissies, toegangscontrolelijsten (ACL's), digitale handtekeningen en checksums om de integriteit van de gegevens te waarborgen.
   Bron: https://docs.microsoft.com/en-us/dotnet/standard/security/secure-coding-best-practices

Bij elke stap, zorg ervoor dat u de best practices voor beveiliging volgt en de meest recente en veilige methoden gebruikt
U kunt bronnen raadplegen zoals OWASP (https://owasp.org/) en Microsoft's beveiligingsdocumentatie (https://docs.microsoft.com/en-us/dotnet/standard/security/) voor meer informatie en richtlijnen.

Succes met de opdracht, en vergeet niet om uw code regelmatig te testen, te valideren en te herzien om potentiële beveiligingsrisico's te verminderen.
